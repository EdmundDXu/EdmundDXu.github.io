---
author: edmund
comments: true
date: 2018-05-07 13:02:21+00:00
layout: post
link: http://118.25.17.78/blog/2018/05/07/raid-%e7%a3%81%e7%9b%98%e9%98%b5%e5%88%97/
slug: raid-%e7%a3%81%e7%9b%98%e9%98%b5%e5%88%97
title: RAID 磁盘阵列
wordpress_id: 244
categories:
- Linux随笔
post_format:
- 日志
tags:
- RAID
- 硬件
---

这篇博文的上半部分讲述的是RAID技术实现和RAID级别的概念，而下半部分则提供不同RAID级别的性能指标分析概览，如果想直接看概览请翻到最后。


# RAID




RAID，独立冗余磁盘阵列（Redundant Array of Independent Disks）,原名为廉价冗余磁盘阵列（Redundant Array of Inexpensive Disks）,由加州大学伯克利分校发布的一篇论文《A Case for Redundant Arrays of Inexpensive Disk(RAID)》标志着RAID技术的开始。




那么什么是RAID呢？要知道在计算机诞生的早期，那时候存储设备的容量都还很小，跟别提性能了，那些容量相对较大的硬盘价格都及其高昂，远远超过了多块小容量硬盘的价格之和，于是就有人开始研究将多块小容量硬盘组合起来当做一块大容量硬盘使用，这就是RAID技术诞生的初衷。后来渐渐地，那些有钱的大公司发现使用RAID技术可以显著地提升磁盘的I/O性能以及容错能力，于是纷纷采用了RAID技术。随着RAID技术的发展完善，RAID设备的性能越来越强大，所能完成的事情也越来越多，于是价格也越发昂贵，甚至要远比原本的大容量硬盘要贵，于是还叫它廉价冗余磁盘阵列就不太好了，所以就改名为独立冗余磁盘阵列。




所以所谓的RAID技术，就是将多块硬盘通过某种技术组织在一起，以提高数据冗余能力和读写性能。RAID一般有两种实现方式：软件RAID（software raid）和硬件RAID（hardware raid），实际上，软件RAID由于需要操作系统来处理数据的读写，实际上性能的提升并不大，所以在生产环境中一般都使用RAID的硬件实现。而RAID的硬件实现也有两种方式，一种是通过将RAID适配卡插在PCI卡槽中，另一种是通过主板直接集成RAID芯片。




由于RAID芯片能够自己处理数据的读写，所以操作系统只需要向RAID芯片发起读写请求，接下来的读写操作会由RAID芯片自身来完成，所以从这个方面来看，RAID的硬件实现能够显著提高数据的读写性能。那么RAID到底是如何实现提高数据冗余能力和读写性能的呢？是通过RAID 级别（level）来实现的。需要注意的是，RAID级别并不意味着性能的好坏，不同的级别只是代表了不同的硬盘组织形式,而不同的组织形式会提供不同的目标。





# RAID级别




一般来说，RAID有6个简单级别，分别是RAID 0~RAID 6，由于RAID 2和RAID 3并不常见，所以这里不对这两个级别做阐述。





## RAID 0




这个级别的RAID采用了数据条带化（[Data Striping](https://en.wikipedia.org/wiki/Data_striping)）的技术，通过将连续的数据切割成多个有顺序的条带来实现多块硬盘的并行读写。如下图所示：




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID0.jpg)






* * *




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID0_1.jpg)




假设数据被切割成了4个条带，每个条带的大小为512KB，那么条带1会被存入到磁盘1中，而条带2会被存入到磁盘2中，条带3被存入磁盘1，条带4被存入磁盘2，此时，条带1和2被并行写入到磁盘1和磁盘2中，条带3和4被并行写入到磁盘1和2中，写入速率几乎提高了2倍。读取也是类似，每次读取都会同时从磁盘1和2读取数据。




可以想象的是，这里只使用了两块硬盘做RAID 0，如果使用10块硬盘，那性能更是可想而知。不过需要注意的是，如果使用了大量的硬盘做RAID 0，那么将会有相当的时间用于切割数据和合并数据，所以并不能达到想象中的速度，但是仍然会有质的飞跃。




不过话又说回来，RAID 0有一个致命的缺陷，那就是没有任何的容错能力，多块硬盘一旦做成了RAID 0，无论是哪一块硬盘出了问题，那么所有数据将全都报废。因为RAID 0使用的是条带技术，如果其中一块盘的条带丢失，那么很明显，只靠剩下来的条带是无法还原数据的，所以数据相当于全部丢失。




根据上面对RAID 0的描述我们也可以发现，如果使用一块硬盘做RAID 0将毫无意义，因为几乎没有任何的性能提升，所以一般来说RAID 0 需要两块及以上的硬盘。由于其极好的读写性能和极低的安全性（硬盘数量越多数据安全性越低），很少会用它来存储安全性要求高的数据，只有那些安全性要求低而且读写性能要求高的数据才会用到单独的RAID 0。





## RAID 1




这个级别的RAID使用了数据镜像（[data mirroring](https://en.wikipedia.org/wiki/Disk_mirroring)）技术，RAID 1在存储数据时，会将一份数据复制成多份来存储到不同的磁盘上，以实现数据的冗余能力。如下图所示：




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID1.jpg)






* * *




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID1_1.jpg)




假设数据由两个数据块组成，RAID 1由两块硬盘组成，那么当数据块1到达时，会被复制成完全相同的两份，一份存入磁盘1，一份存入磁盘2，而当数据块2到达时，也会被复制成两份，一份存入磁盘1，一份存入磁盘2。此时，数据块1被并行写入到两个磁盘中，但是写入的是同一份数据，所以算上复制所花费的时间，写入效率不增反降。但是在读取时，由于可以同时从两个磁盘中读取，也就是说，数据块1从磁盘1中读取，数据块2从磁盘2中读取，所以读性能几乎提高了两倍。




虽然RAID 1的写性能并没有提高，但是牺牲了写性能的RAID 1却能够提供数据的冗余能力。一旦某块硬盘发生了损坏，那么其他硬盘上的数据绝不会受影响，因为是一模一样的数据，所以说做RAID 1的硬盘越多，安全性越高，且读性能也越高，但是硬盘空间利用率越低（因为存储了大量的冗余数据）。所以为了提高性价比，一般企业都会采用两块数据盘互相做镜像，也就是用两块硬盘做RAID 1。




同样的根据上面的描述，RAID 1也至少需要两块硬盘做镜像，因为没有自己和自己做镜像的道理吧。由于RAID 1有很高的数据冗余能力，所以常用来存储安全性要求较高的数据，但是由于其磁盘空间利用率很低，所以对于那些差钱的企业来讲有点难以接受。





## RAID4




这个级别的RAID由具有奇偶校验能力的块级别条带组成，也就是说，RAID 4利用了数据条带化技术，且在存储数据的时候，还会使用一块硬盘额外存储一份数据的奇偶校验位，以保证某一个硬盘损坏后仍然能通过奇偶校验位将其恢复回来。一般来说，RAID 4会采用异或（XOR）的方式存储奇偶校验位。如下图所示：




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID4.jpg)






* * *




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID4_2.jpg)




假设数据被切割成了四个条带，每个条带存储了4bit数据，磁盘1和磁盘2用来存储数据，磁盘3作为校验盘，存储磁盘1和磁盘2中数据的校验值。当数据到达时，会被切割成条带并行写入两个磁盘中，并且在被写入时会按位计算两个条带中的校验值（此处使用异或方式计算），然后将其存入到磁盘3中。在上图中就是1010存入磁盘1, 0110存入磁盘2，而校验值1100（1010 xor 0110 = 1100，异或的计算方式为两位相同则为0，两位不同则为1）则存入磁盘3，同样的第二批条带1100和1001分别存入磁盘1和磁盘2，校验值0111存入磁盘3。




如果其中一块盘损坏，比如磁盘2，那么可以通过磁盘1和校验盘（磁盘3）将磁盘2的内容恢复回来。这是因为异或计算的特性，IF a xor b = c THEN a xor c = b。在上图中，通过磁盘1中的数据1010和磁盘3中的数据1100做异或，可以得到1010 xor 1100 = 0110，果然，和磁盘2中保存的数据是一致的。




此时由于采用了条带化技术，所以读写性能明显提升，而且无论哪块硬盘出现损坏，都可以通过计算将其中的数据恢复，当然如果同时损坏了两块以上的盘那就无力回天了。




由于RAID 4只使用了一块盘作为校验盘，与RAID 1相比，其磁盘空间利用率明显提升，磁盘数量越多提升的也就越多，但是，由于其校验盘的特性，所以不能同时又两块以上的盘损坏，所以相比起RAID 1，其数据安全性降低了。而且一旦有写入操作就一定会向校验盘中写入数据，所以校验盘的性能很容易成为写入性能的瓶颈，或者是出现单点故障。




因为RAID 4使用了条带化技术和校验盘，所以至少需要3块硬盘才能组成RAID 4。





## RAID 5




RAID 5也同样采用了块级别的条带化技术，也具有校验能力。但是和RAID 4不同的是，RAID 5采用的是分布式的校验信息存储，也就是说，组成RAID 5的所有硬盘都轮流作为校验盘。如下图所示：




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID5.jpg)






* * *




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID5_1.jpg)




假设数据被切割成了四个条带，每个条带存储了4bit数据。此时每个磁盘既作为数据盘，又作为校验盘，第一次存入数据时，磁盘1、2作为数据盘，磁盘3作为校验盘，第二次存入数据时，磁盘1、3作为数据盘，磁盘2作为校验盘，第三次存入数据时，磁盘2、3作为数据盘，磁盘1作为校验盘。




和RAID 4一样，RAID 5也具有一块硬盘的容错能力，但是对2块硬盘损坏就没有办法了。由于使用了所有的盘作为校验盘，所以不会存在某一块盘成为性能瓶颈或者是单点故障，而且由于使用了条带技术，RAID 5的读写性能也显著提高。




因为RAID 5的容错能力和读写性能的性价比较高，所以很多企业都采用RAID 5来存储对安全性和读写性能有要求的数据。





## RAID 6




RAID 6相较于RAID 5使用了两块盘作为校验盘，而且这两个奇偶校验算法相互独立，能够允许同时坏两块盘，数据可靠性得到提升，但是很明显，由于每次写入时都需要计算和写入两次校验码，所以写入性能会下降不少。





## RAID 01




RAID 01就是先对硬盘阵列做RAID 0，然后再做RAID 1,这个RAID等级（level）与上面的RAID不同，这是一种混合RAID，这种混合RAID的优点就是可以弥补普通RAID的缺点，充分发挥普通RAID的优点。说简单点就是取长补短。如下图所示：




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID01.jpg)






* * *




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID01_1.jpg)






* * *




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID01_2.jpg)




这里假设一共有四块硬盘，两两做一个RAID 0，然后整体做一个RAID 1。首先数据进来后，会先进入RAID 1，RAID 1会对数据做镜像，复制成两份数据分别发往两组RAID 0，RAID 0收到数据后，会对数据进行条带化，得到4个条带，然后分别写入两块磁盘中。




RAID 01对数据做了镜像之后再进行条带化，看起来有很高的数据可靠性，其实只要每一组RAID 0中各出现一块硬盘损坏，整个RAID 01中的数据就报废了，对4块硬盘来说看起来各坏一块可靠性很高，允许损坏一半的硬盘。但是如果每组RAID 0中有三块硬盘，那也是只允许每组出现一块损坏，这个时候可靠性就大大降低，更不用说更多硬盘的情况了。需要注意的是，无论每组中各坏哪块盘，RAID 01都会报废。就拿上图来说，如果最左边的硬盘和最右边的硬盘出现损坏，看起来好像可以用中间两块硬盘继续工作，因为数据好像还在，但是实际上，在真正的RAID中，两组RAID 0组织数据的方式不一定是相同的，所以即使数据盘交叉损坏也无法让RAID 01正常工作。




事实上，每组中出现一块损坏的硬盘的可能性还是比较高的，所以RAID 01用的并不是很多。




根据上面的描述，可以发现先做RAID 0至少需要两块盘，而再对RAID 0做镜像就需要两组RAID 0，也就是至少需要4块硬盘。





## RAID 10




RAID 10和RAID就刚好相反，先对数据做镜像，然后再做条带。如下图所示：




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID10.jpg)






* * *




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID10_1.jpg)






* * *




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID10_2.jpg)






* * *




![](http://118.25.17.78/wp-content/uploads/2018/05/RAID10_3.jpg)




这里假设一共有四块硬盘，两两做一个RAID 1，然后整体做一个RAID 0。首先数据进来后，会先进入RAID 0，RAID 0会对数据做条带化，将数据切割成4个条带依次分发往两组RAID 1，RAID 1收到数据后，会对数据做镜像，得到两份相同的条带，然后分别写入两块磁盘中。




由于这是两组RAID 1，所以下面的两块磁盘内容完全相同，两组RAID 1中的磁盘就算是同时都坏了一块也不会影响正常工作，因为另一块和坏了的那块是完全相同的。而同一个RAID 1组中所有硬盘都坏了的情况还是很少见的。所以显然RAID 10的数据可靠性要比RAID 01要高，而且两种混合RAID都使用了条带，所以有很高的读写性能，但是由于都是用到了镜像，所以磁盘空间利用率并不高。




根据上面的描述，可以发现先做RAID 1至少需要两块盘，而再对RAID 1做条带就需要两组RAID 1，也就是至少需要4块硬盘。





## JBOD




其实还有很多RAID等级，那些等级基本上都是由普通RAID级别混合而来，只要清楚了普通RAID的组织形式，就可以很容易的分析出混合RAID的组织形式了。




这里要讲的JBOD （ Just a Bunch Of Disks ）不是标准的 RAID 等级，它其实只是将多块硬盘组合起来形成一个大容量的硬盘，容量是多块硬盘的容量之和。对外提供服务时，它只会展示出一块大容量硬盘，而不是多块硬盘。JBOD的存放机制是由第一块磁盘开始按顺序往后存储，当前磁盘存储空间用完后，再依次往后面的磁盘存储数据，并不提供数据的可靠性保证。一旦某一块磁盘出现了损坏，无法保证其他磁盘上的数据是否安全。





# 不同RAID级别的性能指标分析概览




**MIN(DISK1,DISK2,...DISKn)**表示**n**块硬盘中容量最小的那一块硬盘的容量。





## RAID 0




读写性能: 读性能提升，写性能提升




容错能力: 无容错能力




空间利用率: MIN(DISK1,DISK2,...DISKn) * n




最少磁盘数: 2块





## RAID 1




读写性能: 读性能提升，写性能下降




容错能力: 有很强的容错能力




空间利用率: MIN(DISK1,DISK2,...DISKn) * n / 2




最少磁盘数: 2块





## RAID 4




读写性能: 读性能提升，写性能提升




容错能力: 有容错能力，允许坏一块硬盘




空间利用率: MIN(DISK1,DISK2,...DISKn) * （n-1）




最少磁盘数: 3块





## RAID 5




读写性能: 读性能提升，写性能提升




容错能力: 有容错能力，允许坏一块硬盘




空间利用率: MIN(DISK1,DISK2,...DISKn) * （n-1）




最少磁盘数: 3块





## RAID 6




读写性能: 读性能提升，写性能较RAID 5有所下降




容错能力: 有较好的容错能力




空间利用率: MIN(DISK1,DISK2,...DISKn) * （n-2）




最少磁盘数: 4块





## RAID 01




读写性能: 读性能提升，写性能提升




容错能力: 有较好的容错能力




空间利用率: MIN(DISK1,DISK2,...DISKn) *  n / 2




最少磁盘数: 4块





## RAID 10




读写性能: 读性能提升，写性能提升




容错能力: 有很好的容错能力




空间利用率: MIN(DISK1,DISK2,...DISKn) *  n / 2




最少磁盘数: 4块





## JBOD




读写性能: 无任何提升




容错能力: 无容错能力




空间利用率: (DISK1 + DISK2 + DISK3 + ... + DISKn)




最少磁盘数: 2块
