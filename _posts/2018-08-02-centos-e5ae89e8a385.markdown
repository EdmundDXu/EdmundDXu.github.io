---
author: edmund
comments: true
date: 2018-08-02 10:46:37+00:00
layout: post
link: http://118.25.17.78/blog/2018/08/02/centos-%e5%ae%89%e8%a3%85/
slug: centos-%e5%ae%89%e8%a3%85
title: CentOS 安装
wordpress_id: 606
categories:
- Linux随笔
post_format:
- 日志
tags:
- anaconda
- centos安装
- kickstart
- linux
---

# 前言




CentOS的安装界面想必大家都是见过的，既然能够完成安装工作，那么自然应该是有一个安装程序在工作，一般来说在系统安装完成之前，硬盘上都是没有数据的，自然也没有程序，那么CentOS是如何安装的呢？想到我们一般会使用光盘安装CentOS系统，那么这个程序应该就在光盘中，而这个程序就是anaconda。




**anaconda程序会读取用户选择的安装选项和参数，开始安装过程。**




在介绍CentOS 的KickStart安装之前，我们先来看一下CentOS的手动安装。在这里我们使用是CentOS 6.9的发行版，并且这里从安装界面开始介绍，安装前的准备工作这里就不再赘述。







# 一、手动安装CentOS 




## 1、选择安装方式。




(1)安装或升级系统




(2)使用基础显卡驱动安装系统




(3)进入紧急救援模式




(4)从本地硬件设备启动系统




(5)内存测试




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-1.jpg)







## 2、测试安装使用的设备是否有问题。




OK表示测试，SKIP表示跳过测试直接安装。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-2.jpg)




 




## 3、进入安装界面。




从这里开始我们就进入了anaconda的安装界面，在这之前都是光盘上的bootloader的界面。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-3.jpg)




 




## 4、选择安装时的语言环境。




在选择完毕后，后面的安装过程以及安装完成的系统都会使用这个语言。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-4.jpg)




 




## 5、选择安装时的键盘布局。




安装前最重要的步骤，如果选错，后面的安装过程将无法正常进行，一定要选对自己的键盘布局。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-5.jpg)




 




## 6、选择安装的设备类型。




(1)基本存储设备，例如HD、SSD、RAID设备等




(2)特殊存储设备，例如SAN设备等




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-6.jpg)




 




## 7、安装前的警告。




提示你一旦开始安装，存储设备中的数据就会丢失。你可以选择保存数据并放弃安装，也可以继续安装。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-7.jpg)




 




## 8、设置主机名，配置网卡（如果没有网络可以先不配置网卡）




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-8.jpg)




##  




## 9、选择系统时区




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-9.jpg)




 




## 10、设置root用户的密码。




如果强度不高的话会有提示，可以选择use anyway跳过提示。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-10.jpg)




 




## 11、选择安装类型




(1)使用所有的空间，这将会移除设备上的所有分区。




(2)删除Linux分区，不会移除其他系统的分区。




(3)已经有系统安装在设备上，且剩余空间不足以安装新系统，就从当前系统中收缩出可用的空间供新系统安装。




(4)使用设备上的剩余空间。




(5)手动创建自定义布局。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-11.jpg)




 




## 12、创建分区表




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-12.jpg)




 




## 13、选择boot loader安装位置和boot loader所需要引导的操作系统。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-13.jpg)




 




## 14、选择安装的软件包。




下方勾选customize now后可以自定义安装软件包。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-14.jpg)




 




## 15、自定义需要安装的软件包。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-15.jpg)




 




## 16、开始安装过程。




**实际上从此处开始，anaconda才开始执行真正的安装，此前都只是配置anaconda安装所必须的参数。**




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-16.jpg)




 




## 17、安装完成，重启进入操作系统。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-17.jpg)




 




纵观上面的手动安装过程， 我们可以发现实际上anaconda只是根据用户输出的选项和参数来决定安装过程的，比如用户选择语言为english，那么就会输出一个lang en_US.UTF-8的参数输出，然后anaconda会根据这些参数来进行安装。所以选择参数的过程并不重要，无论是通过鼠标点击还是键盘输入，只要anaconda能够接收到参数就能够完成安装过程。




实际上就是如此，**anaconda除了支持交互式地安装外，还支持从文件中直接读取参数来完成安装，这个文件就叫做KickStart文件。**







# 二、KickStart自动安装CentOS




在我们完成了上述的交互式安装过程后，我们会在root用户的家目录下看到一个文件anaconda-ks.cfg。



    
    [root@test ~]# ls
    anaconda-ks.cfg install.log install.log.syslog




 




这个文件就是由anaconda在交互式界面安装后自动根据用户的选择生成的KickStart脚本，其中的选项和参数与你在交互式界面中选择的一模一样。我们来查看一下文件的内容。



    
    [root@test ~]# cat anaconda-ks.cfg 
    # Kickstart file automatically generated by anaconda.
    
    #version=DEVEL
    install
    cdrom
    lang en_US.UTF-8
    keyboard us
    network --onboot no --device eth0 --bootproto static --ip 192.168.233.111 --netmask 255.255.255.0 --gateway 192.168.233.2 --noipv6 --nameserver 192.168.233.2 --hostname test.edmund.com
    rootpw  --iscrypted $6$iIk2kgmWVCaMBlxv$7z85AJymd3JMPH7/xWcw2uURlHizw8/QARsmJde17BKE4kvhF1fNFcoyAvoBQwXe10QhcdDakaWzAxz5puqWC0
    firewall --service=ssh
    authconfig --enableshadow --passalgo=sha512
    selinux --enforcing
    timezone --utc Asia/Shanghai
    bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"
    # The following is the partition information you requested
    # Note that any partitions you deleted are not expressed
    # here so unless you clear all partitions first, this is
    # not guaranteed to work
    #clearpart --all --drives=sda
    
    #part /boot --fstype=ext4 --size=1024
    #part / --fstype=ext4 --size=40960
    #part /home --fstype=ext4 --size=10240
    
    #part swap --size=1024
    
    
    repo --name="CentOS"  --baseurl=cdrom:sr0 --cost=100
    
    %packages
    @core
    @development
    @server-platform-devel
    @server-policy
    @workstation-policy
    jpackage-utils
    




 




在这个文件中我们可以看到很多一目了然的东西，比如lang、keyboard、network、rootpw等，这些都是我们在交互式安装的时候指定的，也就是说，只要你拿着这个kickstart文件安装centos系统，那么你安装后得到的系统和我的一定是相同的，前提是你用的centos 发行版版本和我的相同。




在介绍KickStart的文件语法之前，我们先了解一下centos的安装镜像的文件系统结构和安装引导选项，因为通过修改安装镜像中的bootloader的配置文件可以让bootloader自动读取kickstart文件，通过centos的安装引导选项可以让我们能够在安装时通过kickstart文件安装。







# 三、CentOS系统安装文件




首先将centos镜像挂载到系统中，然后我们进入目录查看文件内容。



    
    [root@edu cdrom]# ls
    CentOS_BuildTag  GPL       Packages                  RPM-GPG-KEY-CentOS-6           RPM-GPG-KEY-CentOS-Testing-6
    EFI              images    RELEASE-NOTES-en-US.html  RPM-GPG-KEY-CentOS-Debug-6     TRANS.TBL
    EULA             isolinux  repodata                  RPM-GPG-KEY-CentOS-Security-6
    




 




我们可以看到很多目录和文件，其中isolinux目录中存放的是bootloader，除此之外的目录和文件都是用于安装的软件源和anaconda程序。比如Packages中存放的是软件源，repodata存放的是软件源的元数据，RPM-GPG-KEY-CentOS-6则是用于验证源的一致性和完整性的GPG文件。




这里我们详细说一下isolinux目录。



    
    [root@edu isolinux]# ls
    boot.cat  grub.conf   isolinux.bin  memtest     TRANS.TBL     vmlinuz
    boot.msg  initrd.img  isolinux.cfg  splash.jpg  vesamenu.c32
    




 




我们可以看到这里面的结构和/boot目录非常类似，也是由内核文件、bootloader以及配置文件构成。




其中boot.cat类似于grub stage 1，是安装在MBR中的，用于引导stage 2，而此处stage 2即为isolinux.bin，isolinux.cfg是isolinux.bin的配置文件，就类似于grub.conf，isolinux.bin在被引导时会结合vesamenu.c32提供一个图形的引导界面，所以我们就能够在光盘引导时看到第一张图，也就是选择安装方式的图形界面。还有initrd.img就对应/boot目录下的initrd文件，用于辅助内核挂载根目录，而vmlinuz则是真正的内核文件。




 




由于下面要讲的是使用KickStart进行安装，所以我们这里只看isolinux.cfg文件，也就是stage 2 的配置文件。




## isolinux.cfg



    
    [root@edu isolinux]# cat isolinux.cfg 
    default vesamenu.c32
    #prompt 1
    timeout 600
    
    display boot.msg
    
    menu background splash.jpg
    menu title Welcome to CentOS 6.9!
    menu color border 0 #ffffffff #00000000
    menu color sel 7 #ffffffff #ff000000
    menu color title 0 #ffffffff #00000000
    menu color tabmsg 0 #ffffffff #00000000
    menu color unsel 0 #ffffffff #00000000
    menu color hotsel 0 #ff000000 #ffffffff
    menu color hotkey 7 #ffffffff #ff000000
    menu color scrollbar 0 #ffffffff #00000000
    
    label linux
      menu label ^Install or upgrade an existing system
      menu default
      kernel vmlinuz
      append initrd=initrd.img
    label vesa
      menu label Install system with ^basic video driver
      kernel vmlinuz
      append initrd=initrd.img nomodeset
    label rescue
      menu label ^Rescue installed system
      kernel vmlinuz
      append initrd=initrd.img rescue
    label local
      menu label Boot from ^local drive
      localboot 0xffff
    label memtest86
      menu label ^Memory test
      kernel memtest
      append -
    
    




 




**default vesamenu.c32**




默认显示图形界面的安装方式选择。




**timeout 600**




安装方式选择的超时时间。




**menu background splash.jpg**




图形界面菜单的背景图片




**menu title Welcome to CentOS 6.9!**




图形界面菜单的标题







**label linux menu label ^Install or upgrade an existing system**




**menu default**




**kernel vmlinuz**




**append initrd=initrd.img**




一个label就是显示在图形界面中的一行内容，紧跟在label标签后面的就是label名，label名后面的是标签名，标签名就是显示在图形界面上的名字。




menu default表示在图形界面中，这一条label为默认选中的label。




kernel vmlinuz指明内核。




**append 后面跟的是内核参数，initrd指明initrd文件，同样的后面还可以跟上很多其他的参数，比如quiet静默模式启动，ks指明使用KickStart文件进行安装等等。**




 




# 四、CentOS的安装引导选项




我们在前面提到，在进入anaconda安装界面之前，一直都是bootloader的界面，实际上，在bootloader界面下，我们可以在图形和文本之间切换。




这里是bootloader的图形界面，可以选择安装方式，在此界面下我们键入esc键，就可以进入到文本界面。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-1.jpg)




 




可以看到进入了boot命令提示符下，在这个界面下，我们不仅可以完成图形界面能够完成的所有操作，还能够完成很多其他功能，比如配置网络、配置kickstart文件路径等。在boot提示符下键入回车即可回到图形界面。




在boot下键入tab键，我们可以得到命令提示，通过这个提示我们可以看到有5个**label**出现，分别是linux、vesa、rescue、local和memtest86，分别对应图形界面下的5个label。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-19.jpg)




 




通过对这些label传递参数可以实现上述提到的设置功能。参数之间使用空格分隔。




## 常用参数




**text :**




强制以文本界面开启anaconda安装程序。默认在内存512MB以上都会开启图形化的anaconda安装程序。




**method :**




指定安装时使用的anaconda和软件源。




**ip=IPADDR : **




指定安装时使用的ip地址




**netmask=NETMASK**




指定安装时使用的子网掩码




**gateway=GATEWAY**




指定安装时使用的网关




**dns=DNS_SERVER_IP**




指定安装时使用的dns




**ifname=IFNAME:MAC_ADDR**




指定安装时使用的网卡接口




**vnc**




安装时开启vnc server




**vncpassword='PASSWORD'**




指定vnc server的密码




**ks=cdrom:/FOO/KICKSTART_FILE**




**ks=hd:/FOO/KICKSTART_FILE**




**ks=http://FOO/KICKSTART_FILE**




**ks=https://FOO/KICKSTART_FILE**




**ks=ftp://FOO/KICKSTART_FILE**




指定ks文件的位置




 




比如使用文本界面的安装就可以键入 linux text 。







# 五、KickStart文件语法




现在我们回过头来看KickStart文件，首先KickStart文件一般由三部分组成，分别是 命令段、程序包段和脚本段。




## 命令段




用于指定安装前的各种配置，比如设置键盘布局、设置语言




### 必选命令




**cdrom, harddrive, nfs, or url (for FTP, HTTP, and HTTPS) :**




指定安装源所在位置。必须是上述安装源指定方式的其中之一。







**authconfig:** 认证方式配置




authconfig --enableshadow --passalgo=sha512  : 使用/etc/shadow文件认证，加密算法为sha512







**booloader:**




bootloader的安装位置及内核参数配置




bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet" : bootloader安装在sda的mbr中，内核参数为crashkernel=auto rhgb quiet。




 




**keyboard:**




设定键盘类型




keyboard --vckeymap=us --xlayouts='us'




 




**lang:**




设定系统语言




lang en_US.UTF-8




 




**part:**




创建分区




part /boot --fstype=ext4 --size=1024 : 创建boot分区，文件系统类型为ext4，空间为1024MB。




 




**rootpw: **




设置root的密码




rootpw --iscrypted $6$QvXLMulsFdInTe0K$o/5FLqMomaeQ4CicBcymSuPr5Te2TfW8obQDX3S.mabcu62akd5rtPhb0TIFnfp7.XW3Wyg4yeAkfXV.yBU7D.




 




**timezone:**




选择系统时区




timezone --utc Asia/Shanghai




 




### 可选命令




**text:**




使用文件安装界面







**graphical:**




使用图形安装界面







**network:**




配置网络信息




network --bootproto=static --device=ens33 --gateway=192.168.199.1 --ip=192.168.199.123 --nameserver=192.168.199.1 --netmask=255.255.255.0 --ipv6=auto --activate  

network --hostname=edu.edmundx.com







**firewall:**




配置系统防火墙，比如启用或者禁用、放行还是禁止等。




firewall --service=ssh : 开启防火墙，并且允许ssh服务通过。







**selinux:**




设置SELinux在系统中的状态，默认为enforcing。







**halt:**




安装完后自动关机。默认选项。







**reboot**: 




安装完后重新启动。







**repo:**




配置额外的yum源用于软件包的安装。可以在多行指定多个repo。




repo --name="CentOS" --baseurl=cdrom:sr0 --cost=100







**user:**




在系统上创建一个新用户。




user --groups=wheel --name=edmund --password=$6$qjpCsD5EV5CNehFZ$zXcHIznYEOsWLEerGuKwgwqwi17txKpCL4rvUkDuT6ltwqGwJudOC3kuFaPmj0emcrMoVd1bqRW/ZyDKji1FO/ --iscrypted --gecos="Edmund.D.Xu"




 




## 程序包段




用于指定安装时使用哪些程序包，或者是程序包组，也可以指定安装时不需要安装的程序包。




程序包段使用%packages和%end表示程序包段的开始和结束。




在程序包段中可以使用@group_name指明要安装的软件包组，package指明要安装的软件包，-package指明不需要安装的软件包（如果存在依赖关系，那么不想要安装的软件包仍然可能会被安装）




`%packages`  

`@core`  

`@development`  

`@server-platform-devel`  

`@server-policy`  

`@workstation-policy`  

`jpackage-utils`  

`%end`




 




## 脚本段




用于指定安装过程需要运行的脚本，分为安装前脚本和安装后脚本。




安装前脚本使用%pre和%end指明开头和结尾，其中可以写安装前需要执行的脚本。




安装后脚本使用%post和%end指明开头和结尾，其中可以写安装后需要执行的脚本。




安装前脚本和安装后脚本出现的顺序对执行没有影响。




 




注意：以上只是列出了一些常用的参数，需要详细了解KickStart文件语法的，可以去查看RHEL的[Installation Guide](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/pdf/installation_guide/Red_Hat_Enterprise_Linux-6-Installation_Guide-en-US.pdf)。







# 六、KickStart文件创建的方式




（1）使用编辑器手动创建或者使用编辑器根据模板修改




（2）使用图形化编辑器创建：system-config-kickstart。同样的这个工具也可以读取模板进行修改




 




在创建完KickStart文件后，可以使用ksvalidator（CentOS 6）命令校验KickStart文件有无语法错误。







# 七、使用KickStart文件安装CentOS 6 系统




这里我会使用http和cdrom两种方式通过KickStart文件自动安装CentOS 6 系统。




注意：此处我是用的是http服务提供软件源，如果使用iso镜像文件的方式提供源会出现 **unable to read package meatadata **的报错，这是因为直接挂载iso镜像文件会导致metadata目录下的文件的后缀消失，导致repomd.xml文件中记录的文件名与实际文件名不符。所以我直接将iso镜像中的文件提取出来放在web服务器上，通过http服务提供源。







## 1、http方式




（1）myks.cfg文件内容（需要注意的是，其中有一项zerombr，可以在分区前清空mbr，如果不清空mbr，那么anaconda将会询问你是否丢弃所有数据，这就会导致无法达到完全的自动安装）



    
    # Kickstart file automatically generated by anaconda.
    skipx
    #version=DEVEL
    install
    url --url http://192.168.31.88/CentOS/
    lang en_US.UTF-8
    keyboard us
    network --onboot yes --device eth0 --bootproto static --ip 192.168.233.111 --netmask 255.255.255.0 --gateway 192.168.233.2 --noipv6 --nameserver 192.168.233.2 --hostname test.edmund.com
    rootpw  --iscrypted $6$iIk2kgmWVCaMBlxv$7z85AJymd3JMPH7/xWcw2uURlHizw8/QARsmJde17BKE4kvhF1fNFcoyAvoBQwXe10QhcdDakaWzAxz5puqWC0
    firewall --service=ssh
    authconfig --enableshadow --passalgo=sha512
    selinux --enforcing
    timezone --utc Asia/Shanghai
    bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"
    # The following is the partition information you requested
    # Note that any partitions you deleted are not expressed
    # here so unless you clear all partitions first, this is
    # not guaranteed to work
    zerombr
    clearpart --all --drives=sda
    
    part /boot --fstype=ext4 --size=1024
    part / --fstype=ext4 --size=40960
    part /home --fstype=ext4 --size=10240
    
    part swap --size=1024
    
    %packages
    @core
    @development
    @server-platform-devel
    @server-policy
    @workstation-policy
    jpackage-utils
    %end




 




（2）将KickStart文件放在http服务器上，并且保证网络通畅。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-20-2.jpg)







（3）准备好CentOS 6系统的软件源，保证网络通畅。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-23.jpg)




（4）开始CentOS 6系统的安装，首先进入bootloader的文本界面，按esc进入，并且输入label和内核参数，敲回车开始安装。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-21-2.jpg)




 




（5）成功获取到kickstart文件，根据kickstart文件中的参数自动开始安装过程。整个过程完全自动。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-22.jpg)




 




 




## 2、cdrom方式




在上面我们发现如果想要通过ks文件安装系统，还需要在boot提示符下键入一堆的指令，这毫无疑问会让人困扰，尤其是在装多台机子或者是调试ks文件的时候，如果能够将这些参数直接写入文件该多好，只需要键入回车就能够通过ks文件启动，实际上这个是可以做到的。




想想之前我们提到的label，在label中有一个append参数，在这后面可以跟上内核参数，显然，我们之前手动填入的ip、netmask、gateway和ks就是内核参数，所以我们只需要新建一个label，然后在append后面跟上之前手动填写的参数即可，以后只需要启动这个label就可以自动通过ks文件安装。




由于镜像文件是只读的，所以我们需要将其中的内容复制到另一个地方，修改后将其重新刻录成镜像文件即可。




通过前面的安装想必你也发现了，我们使用光盘实际上只是用到了光盘中的bootloader，而软件源和anaconda程序实际上是通过http服务提供的，所以我们只需要重新将bootloader也就是isolinux目录刻录成新的镜像文件即可。考虑到前面演示过了将ks文件通过http协议获取，这里就使用将ks文件一起刻录进cdrom的方式直接获取。




 




（1）复制isolinux目录和ks文件



    
    [root@edu ~]# mkdir /tmp/myiso
    [root@edu ~]# cp -a /media/cdrom/isolinux/ /tmp/myiso/
    [root@edu ~]# cp myks.cfg /tmp/myiso/
    [root@edu ~]# cd /tmp/myiso/
    [root@edu myiso]# ls
    isolinux  myks.cfg
    




 




（2）修改isolinux目录下的isolinux.cfg文件



    
    ...
    label ks
      menu label ^Install an existing system based on KickStart file
      menu default
      kernel vmlinuz
      append initrd=initrd.img ks=cdrom:/myks.cfg
    label linux
      menu label ^Install or upgrade an existing system
      kernel vmlinuz
      append initrd=initrd.img
    ...




 




（3）将myiso目录制作成镜像文件，这里需要使用到一个mkisofs命令，在此处不必深究每个选项的意义，只需要知道如何使用即可。



    
    mkisofs -R -J -T -v -no-emul-boot -boot-load-size 4 -boot-info-table -V "CentOS 6.9 x86_64 bootloader" -b isolinux/isolinux.bin -c isolinux/boot.cat -o /root/boot.iso myiso
    
    -V<光盘ID>或-volid<光盘ID>   指定光盘的卷册集ID
    -o<映像文件>或-output<映像文件>   指定映像文件的名称
    -J或-joliet   使用Joliet格式的目录与文件名称
    -c<启动文件名称>   制作可启动光盘时，mkisofs会将启动映像文件中的全-eltorito-catalog<启动文件名称>全部内容作成一个文件
    -b<启动映像文件>或-eltorito-boot<启动映像文件>   指定在制作可启动光盘时所需的启动映像文件
    -R或-rational-rock   使用Rock Ridge Extensions，并开放全部文件的读取权限
    -T或-translation-table   建立文件名的转换表，适用于不支持Rock Ridge Extensions的系统上
    




 




**注意：记得要在tmp目录下执行这个指令，也就是myiso目录的父目录。**



    
    [root@edu tmp]# mkisofs -R -J -T -v -no-emul-boot -boot-load-size 4 -boot-info-table -V "CentOS 6.9 x86_64 bootloader" -b isolinux/isolinux.bin -c isolinux/boot.cat -o /root/boot.iso myiso
    I: -input-charset not specified, using utf-8 (detected in locale settings)
    genisoimage 1.1.11 (Linux)
    Scanning myiso
    Scanning myiso/isolinux
    Excluded by match: myiso/isolinux/boot.cat
    Excluded: myiso/isolinux/TRANS.TBL
    Writing:   Initial Padblock                        Start Block 0
    Done with: Initial Padblock                        Block(s)    16
    Writing:   Primary Volume Descriptor               Start Block 16
    Done with: Primary Volume Descriptor               Block(s)    1
    Writing:   Eltorito Volume Descriptor              Start Block 17
    Size of boot image is 4 sectors -> No emulation
    Done with: Eltorito Volume Descriptor              Block(s)    1
    Writing:   Joliet Volume Descriptor                Start Block 18
    Done with: Joliet Volume Descriptor                Block(s)    1
    Writing:   End Volume Descriptor                   Start Block 19
    Done with: End Volume Descriptor                   Block(s)    1
    Writing:   Version block                           Start Block 20
    Done with: Version block                           Block(s)    1
    Writing:   Path table                              Start Block 21
    Done with: Path table                              Block(s)    4
    Writing:   Joliet path table                       Start Block 25
    Done with: Joliet path table                       Block(s)    4
    Writing:   Directory tree                          Start Block 29
    Done with: Directory tree                          Block(s)    2
    Writing:   Joliet directory tree                   Start Block 31
    Done with: Joliet directory tree                   Block(s)    2
    Writing:   Directory tree cleanup                  Start Block 33
    Done with: Directory tree cleanup                  Block(s)    0
    Writing:   Extension record                        Start Block 33
    Done with: Extension record                        Block(s)    1
    Writing:   The File(s)                             Start Block 34
     21.94% done, estimate finish Thu Aug  2 17:30:08 2018
     43.79% done, estimate finish Thu Aug  2 17:30:08 2018
     65.71% done, estimate finish Thu Aug  2 17:30:08 2018
     87.57% done, estimate finish Thu Aug  2 17:30:08 2018
    Total translation table size: 4703
    Total rockridge attributes bytes: 1440
    Total directory bytes: 2048
    Path table size(bytes): 26
    Done with: The File(s)                             Block(s)    22659
    Writing:   Ending Padblock                         Start Block 22693
    Done with: Ending Padblock                         Block(s)    150
    Max brk space used 0
    22843 extents written (44 MB)
    




 




（4）使用这个镜像文件引导系统启动安装。可以看到我们新添加的label，直接回车开始安装过程。




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-24.jpg)




 




（5）又到了熟悉的自动安装界面




![](http://118.25.17.78/wp-content/uploads/2018/08/centos-installation-25.jpg)





















